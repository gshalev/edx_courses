[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5)], ' ', [], ' ', 0)
('New State Encountered:', (5, 5))
('TempArr: ', [(5, 5), (5, 4)])
('TempArr: ', [(5, 5), (4, 5)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5)], ' ', ['West'], ' ', 1)
('New State Encountered:', (4, 5))
('TempArr: ', [(5, 5), (4, 5), (5, 5)])
('TempArr: ', [(5, 5), (4, 5), (3, 5)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5)], ' ', ['West', 'West'], ' ', 2)
('New State Encountered:', (3, 5))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (4, 5)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5)], ' ', ['West', 'West', 'West'], ' ', 3)
('New State Encountered:', (2, 5))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (3, 5)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5)], ' ', ['West', 'West', 'West', 'West'], ' ', 4)
('New State Encountered:', (1, 5))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (2, 5)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (2, 5)], ' ', ['West', 'West', 'West', 'West', 'East'], ' ', 5)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4)], ' ', ['West', 'West', 'West', 'West', 'South'], ' ', 5)
('New State Encountered:', (1, 4))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 5)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South'], ' ', 6)
('New State Encountered:', (1, 3))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (1, 4)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East'], ' ', 7)
('New State Encountered:', (2, 3))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (1, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (1, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'West'], ' ', 8)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South'], ' ', 8)
('New State Encountered:', (2, 2))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 3)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 1)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East'], ' ', 9)
('New State Encountered:', (3, 2))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (2, 2)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (2, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'West'], ' ', 10)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East'], ' ', 10)
('New State Encountered:', (4, 2))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (3, 2)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (3, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'West'], ' ', 11)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North'], ' ', 11)
('New State Encountered:', (4, 3))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (4, 2)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'East'], ' ', 12)
('New State Encountered:', (5, 3))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (4, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (4, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'East', 'West'], ' ', 13)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'East', 'North'], ' ', 13)
('New State Encountered:', (5, 4))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4), (5, 5)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4), (5, 3)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4), (5, 3)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'East', 'North', 'South'], ' ', 14)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (5, 3), (5, 4), (5, 5)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'East', 'North', 'North'], ' ', 14)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (3, 2), (4, 2), (4, 3), (4, 2)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'East', 'East', 'North', 'South'], ' ', 12)
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 1)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'South'], ' ', 9)
('New State Encountered:', (2, 1))
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 1), (2, 2)])
('TempArr: ', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 1), (1, 1)])
('start iteration', <util.Stack instance at 0x8c303cc>)
('after pop', [(5, 5), (4, 5), (3, 5), (2, 5), (1, 5), (1, 4), (1, 3), (2, 3), (2, 2), (2, 1), (1, 1)], ' ', ['West', 'West', 'West', 'West', 'South', 'South', 'East', 'South', 'South', 'West'], ' ', 10)
('Found solution!!!', (1, 1), 10)
Path found with total cost of 10 in 0.0 seconds
Search nodes expanded: 15
Pacman emerges victorious! Score: 500
Average Score: 500.0
Scores:        500
Win Rate:      1/1 (1.00)
Record:        Win
